<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	">

	<!-- =========================================== -->
	<!-- Properties files                            -->
	<!-- =========================================== -->
	
	<!--
		Property file locations: suppressed here because it might override the
		main context file's resources. The main context is responsible for
		defining them.
	-->

	<!-- =========================================== -->
	<!-- Annotation configuration                    -->
	<!-- =========================================== -->

	<context:annotation-config />

	<!-- =========================================== -->
	<!-- Data Layer                                  -->
	<!-- =========================================== -->

	<!--
		Data source: reads a properties file and injects them into a DBCP DS
	-->
	<bean id="dataSource"
		class="edu.utah.further.core.data.service.ConfigurableBasicDataSource">
		<constructor-arg index="0">
			<bean class="org.apache.commons.dbcp.BasicDataSource" />
		</constructor-arg>
		<property name="properties">
			<bean
				class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="locations">
					<list>
						<value>classpath:datasource-${datasource.config}.properties
						</value>
					</list>
				</property>
			</bean>
		</property>
		<!-- FUR-946: idle connections break. Adding connection testing. -->
		<property name="testOnBorrow" value="true" />
		<property name="testWhileIdle" value="true" />
	</bean>

	<!-- Session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<!--
			Hibernate configuration properties (read from a properties file)
		-->
		<property name="hibernateProperties">
			<bean
				class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="locations">
					<list>
						<!--
							hibernate.config.file, datasource.config.file should be defined
							somewhere in the spring.properties layers
						-->
						<value>classpath:hibernate-${hibernate.config}.properties
						</value>
						<value>classpath:datasource-${datasource.config}.properties
						</value>
					</list>
				</property>
			</bean>
		</property>

		<!-- Using improved naming strategy -->
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.DefaultNamingStrategy" />
		</property>

		<!--
			Reads package-level Hibernate annotations. Unfortunately, this has to
			be manually maintained for all model packages
		-->
		<property name="annotatedPackages">
			<list>
<!-- 				<value>edu.utah.further.core.data.oracle.type</value> -->
			</list>
		</property>

		<!-- Mapping annotated classes using search patterns -->
		<property name="annotatedClasses">
			<list>
				<value><![CDATA[edu.utah.further.subsetdb.domain.Subset]]></value>
				<value><![CDATA[edu.utah.further.subsetdb.domain.Concept]]></value>
				<value><![CDATA[edu.utah.further.subsetdb.domain.Logs]]></value>
			</list>
		</property>
	</bean>

	<!-- Hibernate data access template -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- =========================================== -->
	<!-- Transaction management                      -->
	<!-- =========================================== -->

	<!--
		Enable the configuration of transactional behavior based on
		annotations
	-->
	<tx:annotation-driven />

	<!-- a PlatformTransactionManager is still required -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- =========================================== -->
	<!-- FURTHeR data layer                          -->
	<!-- =========================================== -->

	<!--
		Component auto-detection configuration in the data layer package. Must
		come AFTER sessionFactory is declared for some strange reason when
		deployed to the ESB.
	-->
	<context:component-scan base-package="edu.utah.further.core.data" />
</beans>
