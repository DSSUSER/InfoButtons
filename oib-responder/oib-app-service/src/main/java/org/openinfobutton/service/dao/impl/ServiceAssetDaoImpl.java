/**
 * -----------------------------------------------------------------------------------
 * (c) 2010-2014 OpenInfobutton Project, Biomedical Informatics, University of Utah
 * Contact: {@code <andrew.iskander@utah.edu>}
 * Biomedical Informatics
 * 421 Wakara Way, Ste 140
 * Salt Lake City, UT 84108-3514
 * Day Phone: 1-801-581-4080
 * -----------------------------------------------------------------------------------
 *
 * @author Andrew Iskander {@code <andrew.iskander@utah.edu>}
 * @version Jul 15, 2014
 */
package org.openinfobutton.service.dao.impl;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import java.util.Set;
import org.hibernate.Query;
import org.openinfobutton.app.dao.DaoBase;
import org.openinfobutton.app.model.Asset;
import org.openinfobutton.app.model.AssetProperty;
import org.openinfobutton.service.dao.ServiceAssetDao;
import org.springframework.stereotype.Repository;

// TODO: Auto-generated Javadoc
/**
 * The Class ServiceAssetDaoImpl.
 *
 * @author rick
 */
@Repository
public class ServiceAssetDaoImpl
    extends DaoBase<Asset>
    implements ServiceAssetDao
{

    /*
     * (non-Javadoc)
     * @see org.openinfobutton.service.dao.ServiceAssetDao#addAssetProperty(org.openinfobutton.app.model.AssetProperty)
     */
    @Override
    public void addAssetProperty( AssetProperty assetProperty )
    {
        getSessionFactory().getCurrentSession().save( assetProperty );
    }

    /*
     * (non-Javadoc)
     * @see org.openinfobutton.service.dao.ServiceAssetDao#findAssetsByPropertyCodeSystem(java.lang.String)
     */
    @Override
    public List<Asset> findAssetsByPropertyCodeSystem( String codeSystem )
    {
        final String hql = "select distinct ap.asset from AssetProperty ap where ap.codeSystem = :codeSystem";
        final Query query = getSessionFactory().getCurrentSession().createQuery( hql.toString() );
        query.setParameter( "codeSystem", codeSystem );
        return query.list();
    }

    /**
     * Find asset properties by generated code.
     *
     * @param generatedByCodes the generated by codes
     * @return the list
     */
    public List<AssetProperty> findAssetPropertiesByGeneratedCode( Set<String> generatedByCodes )
    {
        throw new UnsupportedOperationException( "Not supported yet." );
    }

    /*
     * (non-Javadoc)
     * @see org.openinfobutton.service.dao.ServiceAssetDao#findMaxAssetPropertyGroup(java.math.BigDecimal)
     */
    @Override
    public int findMaxAssetPropertyGroup( BigDecimal assetId )
    {

        final String hql =
            "select max(ap.propertyGroupNumber) as maxValue from AssetProperty ap where ap.asset.assetId = :assetId ";
        final Query query = getSessionFactory().getCurrentSession().createQuery( hql.toString() );
        query.setParameter( "assetId", assetId );
        final BigInteger maxPropertyGroupNumber = (BigInteger) query.iterate().next();

        return maxPropertyGroupNumber.intValue();
    }

    /*
     * (non-Javadoc)
     * @see org.openinfobutton.service.dao.ServiceAssetDao#deleteAllAssetPropertiesByGeneratedByCode(java.util.Set)
     */
    @Override
    public void deleteAllAssetPropertiesByGeneratedByCode( Set<String> generatedByCodes )
    {

        final String hql =
            "delete from AssetProperty ap where ap.assetId=:assetId and ap.generatedByCode in (:generatedByCodes)";
        final Query query = getSessionFactory().getCurrentSession().createQuery( hql.toString() );
        query.setParameter( "generatedByCodes", generatedByCodes );
        query.executeUpdate();

    }

    /*
     * (non-Javadoc)
     * @see org.openinfobutton.service.dao.ServiceAssetDao#deleteAllAssetPropertiesByGeneratedByCodeAndCodeSystem(java.lang.String, java.lang.String)
     */
    @Override
    public void deleteAllAssetPropertiesByGeneratedByCodeAndCodeSystem( String codeSystem, String generatedByCode )
    {

        final String hql =
            "delete from AssetProperty ap where ap.asset.assetId=:assetId and " +
            "ap.codeSystem=:codeSystem and ap.generatedByCode=:generatedByCode";
        final Query query = getSessionFactory().getCurrentSession().createQuery( hql.toString() );
        query.setParameter( "codeSystem", codeSystem );
        query.setParameter( "generatedByCode", generatedByCode );
        query.executeUpdate();

    }

    /*
     * (non-Javadoc)
     * @see org.openinfobutton.service.dao.ServiceAssetDao#deleteAssetPropertiesByGeneratedByCode(java.math.BigDecimal, java.lang.String)
     */
    @Override
    public void deleteAssetPropertiesByGeneratedByCode( BigDecimal assetId, String generatedByCode )
    {

        final String hql =
            "delete from AssetProperty ap where ap.asset.assetId=:assetId and ap.generatedByCode=:generatedByCode";
        final Query query = getSessionFactory().getCurrentSession().createQuery( hql.toString() );
        query.setParameter( "assetId", assetId );
        query.setParameter( "generatedByCode", generatedByCode );
        query.executeUpdate();

    }

    /*
     * (non-Javadoc)
     * @see org.openinfobutton.service.dao.ServiceAssetDao#deleteAssetPropertiesByGeneratedByCodeAndCodeSystem(java.math.BigDecimal, java.lang.String, java.lang.String)
     */
    @Override
    public void deleteAssetPropertiesByGeneratedByCodeAndCodeSystem( BigDecimal assetId, String codeSystem,
                                                                     String generatedByCode )
    {

        final String hql =
            "delete from AssetProperty ap where ap.asset.assetId=:assetId and ap.codeSystem=:codeSystem " +
            "and ap.generatedByCode=:generatedByCode";
        final Query query = getSessionFactory().getCurrentSession().createQuery( hql.toString() );
        query.setParameter( "assetId", assetId );
        query.setParameter( "codeSystem", codeSystem );
        query.setParameter( "generatedByCode", generatedByCode );
        query.executeUpdate();

    }

}
